{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,aAGA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,wBAC/BI,UAAWL,SAASC,cAAc,0BA+BpC,SAASK,EAAcC,EAAUL,GAW/B,OAVgB,IAAIM,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEF,E,MAAUL,IAEpBQ,EAAO,C,SAAEH,E,MAAUL,GAAQ,GAE5BA,EAAM,G,CArCbJ,EAAKO,UAAUS,iBAAiB,SAASC,IAEvC,GADAA,EAAEC,iBACElB,EAAKI,MAAMe,MAAQ,GAAKnB,EAAKK,KAAKc,MAAQ,GAAKnB,EAAKM,OAAOa,MAAQ,EACrEC,EAAAC,OAAOC,QAAQ,mCACb,GACA,aAEF,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAKM,OAAOa,MAAOI,IAAK,CAI1Cf,EAHee,EAAI,EACNC,OAAOxB,EAAKI,MAAMe,OAASK,OAAOxB,EAAKK,KAAKc,OAASI,GAG/DE,MAAK,EAAChB,SAAEA,EAAQL,MAAEA,MACjBN,EAAA4B,OAAOC,QACL,qBAAqBlB,QAAeL,MACrC,IAEFwB,OAAM,EAACnB,SAAEA,EAAQL,MAAEA,MAClBN,EAAA4B,OAAOG,QACL,oBAAoBpB,QAAeL,MACpC,G,CAKTJ,EAAKC,KAAK6B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  createBtn: document.querySelector('button[type=\"submit\"]'),\n}\n\nrefs.createBtn.addEventListener('click', e => {\n  e.preventDefault();\n  if (refs.delay.value < 0 || refs.step.value < 0 || refs.amount.value < 0) {\n    Report.warning('Please choose a positive number!',\n      '',\n      'Okay');\n  } else {\n    for (let i = 0; i < refs.amount.value; i++) {\n      let position = i + 1;\n      let delays = Number(refs.delay.value) + Number(refs.step.value) * i;\n\n      createPromise(position, delays)\n        .then(({ position, delay }) => {\n          Notify.success(\n            `Fulfilled promise ${position} in ${delay}ms`\n          );\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(\n            `Rejected promise ${position} in ${delay}ms`\n          );\n        });\n    }\n  }\n\n  refs.form.reset();\n})\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","createBtn","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","value","$i37YJ","Report","warning","i","Number","then","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.eb81ee10.js.map"}